--  $Id: producer_consumer.aadl 6713 2009-06-20 20:58:28Z lanarre $

package Producer::Consumer
public
  with Deployment;
  with Data_Model;

  ----------
  -- Data --
  ----------
  
  data Alpha_Type
  end Alpha_Type;
  
  -----------------
  -- Subprograms --
  -----------------
  
  subprogram Produce_Spg
  features
    Data_Source : out parameter Alpha_Type;
  end Produce_Spg;
  
  subprogram Consume_Spg
  features
    Data_Sink : in parameter Alpha_Type;
  end Consume_Spg;
  
  -------------
  -- Threads --
  -------------
  
  thread P
  features
    Data_Source : out data port Alpha_Type;
  properties
    Compute_Execution_Time => 1 ms .. 10 ms;
    priority => 1;
    period => 10 ms;
  end P;
  
  thread implementation P.Impl
  calls 
    Mycall : {
    P_Spg : subprogram Produce_Spg;
    };
  connections
    parameter P_Spg.Data_Source -> Data_Source;
  end P.Impl;
  
  thread Q
  features
    Data_Sink : in data port Alpha_Type;
  properties
    Compute_Execution_Time => 1 ms .. 20 ms;
    priority => 2;
    period => 10 ms;
  end Q;
  
  thread implementation Q.Impl
  calls 
    Mycall : {
    Q_Spg : subprogram Consume_Spg;
    };
  connections
    parameter Data_Sink -> Q_Spg.Data_Sink;
  end Q.Impl;

  ---------
  -- Bus --
  ---------
  
  bus Ethernet_Bus
  end Ethernet_Bus;
  
  ---------------
  -- Processor --
  ---------------
  
  processor the_processor
  features
    ETH : requires bus access Ethernet_Bus;
  end the_processor;
  
  ---------------
  -- Processes --
  ---------------
  
  process A
  features
    Alpha : out data port Alpha_Type;
  end A;
  
  process implementation A.Impl
  subcomponents
    Producer        : thread P.Impl;
  connections
    port Producer.Data_Source -> Alpha;
  end A.Impl;
  
  process B
  features
    Beta  : in data port Alpha_Type;
  end B;
  
  process implementation B.Impl
  subcomponents
    Consumer        : thread Q.Impl;
  connections
    port Beta -> Consumer.Data_Sink;
  end B.Impl;
  
  ------------
  -- System --
  ------------
  
  system PC_Simple
  end PC_Simple;
  
  system implementation PC_Simple.Native
  subcomponents
    pr_A : process A.Impl;
    pr_B : process B.Impl;
    
    CPU     : processor the_processor;
    the_bus : bus Ethernet_Bus;
  connections
    bus access the_bus -> CPU.ETH;
    port pr_A.Alpha -> pr_B.Beta
    {Actual_Connection_Binding => (reference (the_bus));};
  properties
    actual_processor_binding => reference (CPU) applies to pr_A;
    actual_processor_binding => reference (CPU) applies to pr_B;
 annex real_specification {**
   theorem flow_latency
      foreach s in system_set do
         requires (Latency);
	 check (1=1);
    end flow_latency;
  **};
  end PC_Simple.Native;

end Producer::Consumer;
