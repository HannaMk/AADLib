-- Earliest deadline first (EDF) is a dynamic scheduling 
-- algorithm used in real-time operating systems

-- this theorem is able to verify EDF schedulability
-- on each processor designed in a system

-- Utilization_Factor : compute and return utilization factor
-- of a thread set. 

theorem Utilization_Factor

foreach e in Local_Set do

var Period 	:= Property (e, "period") / 10**9;
var CET		:= Last ( Property (e, "compute_execution_time"));
var Factor	:= CET / Period;

return (MSum (Factor));

end Utilization_Factor;

-- theorem edf use Utilization_Factor returned value
-- for checking EDF schedulability law.  
 
theorem edf

foreach e in processor_set do 

Processes (e) := { x in process_set | Is_Bound_To (x, e)};
Threads := { x in thread_Set | Is_Subcomponent_Of (x, processes)};

var Sum_Utilizations := Compute Utilization_Factor(Threads);

Check (Sum_Utilizations <= 1);

end edf;

